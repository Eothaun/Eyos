name: C/C++ CI

on: [push]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: update cmake
      run: wget https://github.com/Kitware/CMake/releases/download/v3.16.2/cmake-3.16.2-Linux-x86_64.tar.gz &&  tar xvzf cmake-3.16.2-Linux-x86_64.tar.gz
    - name: install openGL
      run: sudo apt-get install libglu1-mesa-dev freeglut3-dev mesa-common-dev
    - name: create smlink
      run: ln -s cmake-3.16.2-Linux-x86_64/bin/cmake cm && chmod 777 cm
    - name: configure
      run: ls -l && ls -l src/ && ./cm .
    - name: make Engine
      run: make -j4 Engine
    - name: make DedicatedServer
      run: make -j4 EyosDedicatedServer
    - name: make check
      run: make check
    - name: make distcheck
      run: make distcheck
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=DEBUG

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config DEBUG
